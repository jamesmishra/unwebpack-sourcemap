name: release

defaults:
  run:
    shell: bash

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

permissions:
  contents: write

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - "ubuntu-20.04"
          - "macos-11"

    steps:
    - name: Check out the codebase.
      uses: actions/checkout@v3

    - name: Set up Python 3.8.
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"

    - name: Install pip and poetry.
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install poetry
        python3 -m poetry config virtualenvs.in-project true
  
    - name: Install unpackweb-sourcemap.
      run: |
        python3 -m poetry install

    - name: Get the wheel version from the GitHub tag.
      id: get_version
      run: echo VERSION=${GITHUB_REF/refs\/tags\/v/} >> $GITHUB_OUTPUT

    - name: Build the Python wheel (Ubuntu only).
      id: publish_to_pypi
      run: |
        python3 -m poetry version ${{ steps.get_version.outputs.VERSION }}
        python3 -m poetry build
      if: startsWith(matrix.os,'ubuntu')
  
    - name: Build PyInstaller binary.
      id: build_pyinstaller_binary
      run: python3 -m poetry run pyinstaller --name=unwebpack-sourcemap-${{ steps.get_version.outputs.VERSION }}-${{ runner.os }}-${{ runner.arch }} --onefile --clean --noconfirm unwebpack_sourcemap.py

    - name: Create GitHub release and upload assets (Ubuntu).
      id: create_release_ubuntu
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release v${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        fail_on_unmatched_files: true
        files: |
          dist/unwebpack-sourcemap-*
          dist/unwebpack_sourcemap-${{ steps.get_version.outputs.VERSION }}*.whl
          dist/unwebpack_sourcemap-${{ steps.get_version.outputs.VERSION }}.tar.gz
      if: startsWith(matrix.os,'ubuntu')

    - name: Create GitHub release and upload assets (macOS).
      id: create_release_macos
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        fail_on_unmatched_files: true
        append_body: true
        files: |
          dist/unwebpack-sourcemap-*
      if: startsWith(matrix.os,'macos')

    - name: Publish wheel to PyPI (dry-run) (Ubuntu only).
      id: publish_wheel_to_poetry
      run: python3 -m poetry publish -vvv --no-interaction --dry-run
      if: startsWith(matrix.os,'ubuntu')
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
